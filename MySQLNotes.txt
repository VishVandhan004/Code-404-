MySQL is a programming language used to create databases.. it is very much helpful in creating databases..

SQL - Structured query language.

Instagram, Netflix, Airbnb, microsoft use SQL as their databases

if we are playing around with big amounts of data like creating the database, managing it, etc, we can consider SQL..

SQL has basic CRUD operations (create, read, update, delete)..it has security, administration, etc.

Query-> instructions given to the RDMS.

Data is in the form of tables and columns.

Database -  it's a collection of data that are stored together. data stored should be similar. you can't store data of students and teachers together. keep students and teachers separate.

Data can be written on a paper, stored in excel or stored using softwares like SQL.

2 Types of databases: relational and non-relational
relational- data is characterized into rows and columns. ex- SQL.
non relational- data is charcaterized into graphs but not in rows and columns.
relational database uses RDBMS..

Key - used to allow the arrangement of different tables in database.. we can access all the details of a particular data easily using keys.
exp->  for student , student_id, student_name, student_rollno, student_age, etc are some of the keys.

primary key - it's the most important key in database. it can only be one and no duplication and no null value
ex-> student_id can be the primary key.
 
unique key - it must have unique values
exp -> student_phoneno can be the unique key among the data after primary key.

super key- set of multiple keys used to identify data.
exp-> student_id and student_name -> will have same name but not same id.

alternate key- it can be an alternate for the primary key. must be a unique value like ID.
exp-> student_email can work as an alternate.

Candidate key- set of columns which has keys that can replace the primary key. it's somewhat similar to alternate key.
exp-> student_email and student_phoneno are examples

composite key - it's a combination of 2 unique keys.
exp - id and phone number..

foreign key - it's a key that is part of another database and it has been imported..

different datatypes in SQL -
CHAR, VARCHAR, INT, DATE, TIMESTAMP

Open the MySQL workbench and then we will be creating all these functions and operations-
Creating a database - use the 'CREATE DATABASE' keyword

If you have multiple databases and you wanna use one, you could type the 'USE database name' // here write the database name like use southwind, etc..

if you want to delete any database, simply type -> "DROP DATABASE database name"

if you want to create a table inside the DB to store the values, type-> "CREATE TABLE tablename(
    // write down what do you want in the table 
    // exp -> num_column int
    // write the name of what you want and specify the datatype of it..
);" this basically creates a lot of columns in the table

ALTER keyword is helpful in writing shit into the table inside of a database
exp-> ALTER TABLE clothesline
after alter, then you can ADD columns into your table.
exp-> ADD price int, ADD name VARCHAR(200);

if we want the user to write something which is mandatory, we could use NOT NULL keyword.
exp-> CREATE DATABASE restaurant;
USE restaurant;
CREATE TABLE restuarant_table(
Rname VARCHAR(200) NOT NULL,
Rincome int NOT NULL,
Raddress VARCHAR(200) NOT NULL
);
user has to write these values.

Primary key - it's a type of key which is unique and separates one type of data with another type of data.
exp ->
CREATE DATABASE restaurant;
USE restaurant;
CREATE TABLE restuarant_table(
RId int NOT NULL,
Rname VARCHAR(200) NOT NULL,
Rincome int NOT NULL,
Raddress VARCHAR(200) NOT NULL,
PRIMARY KEY(RId)
);
here, the restaurant address, income, name might be same but the ID of the restaurant will definitely be different. so RId is the primary key..
Note -> we will find the PRIMARY in the indexes section of MYSQL workbench..

LET'S TAKE AN EXAMPLE -->>>

CREATE DATABASE restaurant;
USE restaurant;
CREATE TABLE restaurant_details(
RId int NOT NULL,
Rname VARCHAR(200) NOT NULL,
Rincome int NOT NULL,
Raddress VARCHAR(200) NOT NULL,
PRIMARY KEY(RId)
);
CREATE TABLE menu(
num int NOT NULL,
Rmeal_name VARCHAR(200) NOT NULL,
Rmeal_type VARCHAR(200) NOT NULL,
Rprice int NOT NULL,
PRIMARY KEY(num),
Rnum int NOT NULL,
FOREIGN KEY(Rnum) REFERENCES restaurant_details(RId)
);
here we have created 2 tables in a single database.
RId is the primary key in the first table and num is the primary key in the second table. 
FOREIGN KEY is used to link 2 tables..Rnum is the foreign key which will be referencing to the the RId column in the restaurant_details table..

ANOTHER EXAMPLE ->

CREATE DATABASE Travel;
USE Travel;
CREATE TABLE flights(
F_num int PRIMARY KEY,
F_start VARCHAR(20),
F_end VARCHAR(20)
);
INSERT INTO flights VALUES(20,'Mumbai','Shanghai');
INSERT INTO flights VALUES(21,'Seoul','Tokyo');
INSERT INTO flights VALUES(22,'Adelaide','Los Angeles');
SELECT * from flights;
SELECT * from flights ORDER BY F_start;
SELECT * from flights LIMIT 2;
SELECT F_start AS 'C_start' FROM flights;
WHERE F_start LIKE '% ca %';
UPDATE flights
SET F_start="Manila"
WHERE num = 3
SELECT * FROM flights

we have basically created a database called travel and in that we have created a table and in that we have created some columns. we have inserted values into the tables by using the "INSERT INTO VALUES" command.
Finally we would get everything, by using the "SELECT" command.. In the 2nd SELECT statement, we are basically putting the f_start column in the alphabetical order by using the command("ORDER BY") command..
In the 3rd select statement, we are getting only 2 column values because of the limit we have set. we can choose the number of columns we want to see by writing the "LIMIT no" command. 
In the 4th select statement, we have changed the name of the column. specify the name of the column and the name of the table as well..
In the WHERE statement, we would get only the elements or data which has the words "ca"..
134 to 136, we have changed the value of num 3 of the f_start column.

